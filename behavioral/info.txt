Chain of Responsibility.
Предназначен для организации в системе уровней ответственности. Использование этого шаблона позволяет установить, должно
ли сообщение обрабатываться на том уровне, где оно было получено, или же оно должно передаваться для обработки другому
объекту.

Command.
Обеспечивает обработку команды в виде объекта, что позволяет сохранять ее, передавать в качестве параметра методам, а
также возвращать ее в виде результата, как и любой другой объект.

Interpreter.
Определяет интерпретатор некоторого языка.

Iterator.
Предоставляет единый метод последовательного доступа к элементам коллекции, не зависящий от самой коллекции и никак с
ней не связанный.

Mediator.
Предназначен для упрощения взаимодействия объектов системы путем создания специального объекта, который управляет
распределением сообщений между остальными объектами.

Memento.
Сохраняет "моментальный список" состояния объекта, позволяющий такому объекту вернуться к исходному состоянию, не
раскрывая своего содержимого внешнему миру.

Observer.
Предоставляет компоненту возможность гибкой рассылки сообщений интересующим его получателям.

State.
Обеспечивает изменение поведения объекта во время выполнения программы.

Strategy.
Предназначен для определения группы классов, которые представляют собой набор возможных вариантов поведения. Это дает
возможность гибко подключать те или иные наборы вариантов поведения во время работы приложения, меняя его
функциональность "на ходу".

Visitor.
Обеспечивает простой и удобный в эксплуатации способ выполнения тех или иных операций для определенного семейства
классов. Это достигается путем централизации с помощью данного шаблона возможных вариантов поведения, что позволяет
модифицировать или расширять их, не затрагивая классы, на которые распространяются эти варианты поведения.

Template Method.
Предоставляет метод, который позволяет подклассам перекрывать части метода, не прибегая к их переписыванию.
