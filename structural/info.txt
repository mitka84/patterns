Adapter.
Обеспечение взаимодействия двух классов путем преобразования интерфейса одного из них таким образом, чтобы им мог
пользоваться другой класс.

Bridge.
Разделение сложного компонента на две независимые, но взаимосвязанные иерархические структуры: функциональную абстракцию
и внутреннюю реализацию. Это облегчает изменение любого аспекта компонента.

Composite.
Предоставление гибкого механизма для создания иерархических древовидных структур произвольной сложности, элементы
которых могут свободно взаимодействовать с единым интерфейсом.

Decorator.
Предоставление механизма для добавления или удаления функциональности компонентов без изменения их внешнего
представления или функций.

Facade.
Создание упрощенного интерфейса для группы подсистем или сложной подсистемы.

Flyweight.
Уменьшение количества объектов системы с многочисленными низкоуровневыми особенностями путем совместного использования
подобных объектов.

Half-Object Plus Protocol (HOPP).
Предоставление единой сущности, которая размещается в двух или более областях адресного пространства.

Proxy.
Представление другого объекта, обусловленное необходимостью обеспечения доступа или повышения скорости либо
соображениями безопасности.
